<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:TypefaceUtil.Avalonia.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:Avalonia.Controls.Skia;assembly=Avalonia.Controls.Skia"
        mc:Ignorable="d" d:DesignWidth="735" d:DesignHeight="438"
        x:Class="TypefaceUtil.Avalonia.Views.MainWindow"
        x:Name="MainWindow"
        MinWidth="735"
        MinHeight="438"
        WindowStartupLocation="CenterScreen"
        Background="{x:Null}"
        TransparencyLevelHint="AcrylicBlur"
        ExtendClientAreaToDecorationsHint="True"
        ExtendClientAreaChromeHints="PreferSystemChrome"
        UseLayoutRounding="True"
        Icon="/Assets/avalonia-logo.ico"
        Title="TypefaceUtil">
  <Design.DataContext>
    <vm:MainWindowViewModel/>
  </Design.DataContext>
  <Panel Margin="{Binding #MainWindow.OffScreenMargin}">
    <!-- Styles -->
    <Panel.Styles>
      <!-- transition -->
      <Style Selector=":is(Control).transition">
        <Setter Property="Transitions">
          <Transitions>
            <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.35" Easing="0.4,0,0.6,1" />
            <DoubleTransition Property="Opacity" Duration="0:0:0.50" Easing="0.4,0,0.6,1" />
          </Transitions>
        </Setter>
        <Setter Property="Opacity" Value="0"/>
      </Style>
      <Style Selector=":is(Control)[IsVisible=True].transition">
        <Setter Property="RenderTransform" Value="scaleX(1) scaleY(1)" />
        <Setter Property="Opacity" Value="1"/>
      </Style>
      <Style Selector=":is(Control)[IsVisible=False].transition">
        <Setter Property="RenderTransform" Value="scaleX(0.1) scaleY(0.1)" />
        <Setter Property="Opacity" Value="0"/>
      </Style>
      <!-- transitionGlyph -->
      <Style Selector=":is(Control).transitionGlyph">
        <Setter Property="Transitions">
          <Transitions>
            <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.25" Easing="0.4,0,0.6,1" />
            <DoubleTransition Property="Opacity" Duration="0:0:0.20" Easing="0.4,0,0.6,1" />
          </Transitions>
        </Setter>
        <Setter Property="Opacity" Value="0"/>
      </Style>
      <Style Selector=":is(Control)[IsVisible=True].transitionGlyph">
        <Setter Property="RenderTransform" Value="scaleX(1) scaleY(1)" />
        <Setter Property="Opacity" Value="1"/>
      </Style>
      <Style Selector=":is(Control)[IsVisible=False].transitionGlyph">
        <Setter Property="RenderTransform" Value="scaleX(0.1) scaleY(0.1)" />
        <Setter Property="Opacity" Value="0"/>
      </Style>
    </Panel.Styles>
    <Panel>
      <!-- AcrylicBlur -->
      <ExperimentalAcrylicBorder DockPanel.Dock="Left" IsHitTestVisible="False">
        <ExperimentalAcrylicBorder.Material>
          <ExperimentalAcrylicMaterial BackgroundSource="Digger"
                                       TintColor="White"
                                       TintOpacity="1"
                                       FallbackColor="White"
                                       MaterialOpacity="0.3" />
        </ExperimentalAcrylicBorder.Material>
      </ExperimentalAcrylicBorder>
      <!-- Load View -->
      <StackPanel MaxWidth="680" 
                  MinWidth="680"
                  HorizontalAlignment="Center" 
                  VerticalAlignment="Center"
                  Margin="0,36,0,0"
                  IsEnabled="{Binding !IsLoading}"
                  IsVisible="{Binding Typeface, Converter={x:Static ObjectConverters.IsNull}}">
        <DockPanel Margin="12,12,6,12" DockPanel.Dock="Top">
          <Label Content="Font size:"
                 VerticalAlignment="Center"
                 Width="140"
                 DockPanel.Dock="Left"/>
          <TextBox Text="{Binding FontSize}" 
                   Watermark="Font size"
                   VerticalAlignment="Center"
                   Margin="6,0,12,0"
                   DockPanel.Dock="Left"/>
        </DockPanel>
        <DockPanel Margin="12,12,6,12" DockPanel.Dock="Top">
          <Label Content="Item width:"
                 VerticalAlignment="Center"
                 Width="140"
                 DockPanel.Dock="Left"/>
          <TextBox Text="{Binding ItemWidth}" 
                   Watermark="Item width"
                   VerticalAlignment="Center"
                   Margin="6,0,12,0"
                   DockPanel.Dock="Left"/>
        </DockPanel>
        <DockPanel Margin="12,12,6,12" DockPanel.Dock="Top">
          <Label Content="Item height:"
                 VerticalAlignment="Center"
                 Width="140"
                 DockPanel.Dock="Left"/>
          <TextBox Text="{Binding ItemHeight}" 
                   Watermark="Item height"
                   VerticalAlignment="Center"
                   Margin="6,0,12,0"
                   DockPanel.Dock="Left"/>
        </DockPanel>
        <DockPanel Margin="12,12,6,12" DockPanel.Dock="Top">
          <Label Content="Color:"
                 VerticalAlignment="Center"
                 Width="140"
                 DockPanel.Dock="Left"/>
          <TextBox Text="{Binding Color}" 
                   Watermark="Color"
                   VerticalAlignment="Center"
                   Margin="6,0,12,0"/>
        </DockPanel>
        <DockPanel Margin="12,6,6,12" DockPanel.Dock="Top">
          <Label Content="Input file:"
                 VerticalAlignment="Center"
                 Width="140"
                 DockPanel.Dock="Left"/>
          <Button Content="Load" 
                  Command="{Binding LoadInputFileCommand}"
                  MinWidth="60"
                  HorizontalContentAlignment="Center"
                  VerticalAlignment="Center"
                  Margin="12,0,12,0"
                  DockPanel.Dock="Right"/>
          <Button Content="..." 
                  Command="{Binding InputFileCommand}"
                  MinWidth="60"
                  HorizontalContentAlignment="Center"
                  VerticalAlignment="Center"
                  DockPanel.Dock="Right"/>
          <TextBox Text="{Binding InputFile}" 
                   Watermark="Input file path"
                   VerticalAlignment="Center"
                   Margin="6,0,12,0"/>
        </DockPanel>
        <DockPanel Margin="12,12,12,12" DockPanel.Dock="Top">
          <Label Content="Input family name:"
                 VerticalAlignment="Center"
                 Width="140"
                 DockPanel.Dock="Left"/>
          <Button Content="Load" 
                  Command="{Binding LoadFamilyNameCommand}"
                  MinWidth="60"
                  HorizontalContentAlignment="Center"
                  VerticalAlignment="Center"
                  Margin="12,0,6,0"
                  DockPanel.Dock="Right"/>
          <ComboBox Items="{Binding FontFamilies}"
                    SelectedItem="{Binding FamilyName, Mode=TwoWay}"
                    MinWidth="200"
                    HorizontalContentAlignment="Center"
                    VerticalAlignment="Center"
                    Margin="12,0,0,0"
                    MaxDropDownHeight="210"
                    DockPanel.Dock="Right"/>
          <TextBox Text="{Binding FamilyName}" 
                   Watermark="Input family name"
                   VerticalAlignment="Center"
                   Margin="6,0,0,0"/>
        </DockPanel>
      </StackPanel>
      <!-- Typeface View -->
      <DockPanel Classes="transition"
                 Margin="0,36,0,0"
                 IsEnabled="{Binding !IsLoading}"
                 IsVisible="{Binding Typeface, Converter={x:Static ObjectConverters.IsNotNull}}">
        <DockPanel DockPanel.Dock="Top">
          <Button Command="{Binding CloseCommand}"
                  Background="Transparent"
                  HorizontalAlignment="Right"
                  HorizontalContentAlignment="Center"
                  Margin="12,12,36,12"
                  DockPanel.Dock="Right">
            <PathIcon Width="15.703125" Height="15.703125" Opacity="0.6" Foreground="#000000" Data="M8.5625 7.85156L15.7031 15L15 15.7031L7.85156 8.5625L0.703125 15.7031L0 15L7.14063 7.85156L0 0.703125L0.703125 0L7.85156 7.14063L15 0L15.7031 0.703125L8.5625 7.85156Z"/>
          </Button>
          <Button Background="Transparent"
                  HorizontalAlignment="Right"
                  HorizontalContentAlignment="Center"
                  Margin="12,12,0,12"
                  DockPanel.Dock="Right">
            <Button.Flyout>
              <MenuFlyout ShowMode="Standard" Placement="BottomEdgeAlignedLeft">
                <MenuItem Header="Copy as Xaml (StreamGeometry)" Command="{Binding CopyAsCommand}" CommandParameter="XamlStreamGeometry" />
                <MenuItem Header="Copy as Xaml (PathIcon)" Command="{Binding CopyAsCommand}" CommandParameter="XamlPathIcon" />
                <MenuItem Header="Copy as Xaml (Path)" Command="{Binding CopyAsCommand}" CommandParameter="XamlPath" />
                <MenuItem Header="Copy as Xaml (Canvas)" Command="{Binding CopyAsCommand}" CommandParameter="XamlCanvas" />
                <MenuItem Header="Copy as Xaml (GeometryDrawing)" Command="{Binding CopyAsCommand}" CommandParameter="XamlGeometryDrawing" />
                <MenuItem Header="Copy as Xaml (DrawingGroup)" Command="{Binding CopyAsCommand}" CommandParameter="XamlDrawingGroup" />
                <MenuItem Header="Copy as Xaml (DrawingImage)" Command="{Binding CopyAsCommand}" CommandParameter="XamlDrawingImage" />
                <MenuItem Header="Copy as Xaml (Image)" Command="{Binding CopyAsCommand}" CommandParameter="XamlImage" />
                <MenuItem Header="Copy as Svg (Path Data)" Command="{Binding CopyAsCommand}" CommandParameter="SvgPathData" />
                <MenuItem Header="Copy as Svg (Path)" Command="{Binding CopyAsCommand}" CommandParameter="SvgPath" />
                <MenuItem Header="Copy as Svg (Svg)" Command="{Binding CopyAsCommand}" CommandParameter="Svg" />
              </MenuFlyout>
            </Button.Flyout>
            <PathIcon Width="14" Height="16" Opacity="0.6" Foreground="#000000" Data="M14 6.28906L14 16L4 16L4 13L0 13L0 0L6.71094 0L9.71094 3L10.7109 3L14 6.28906ZM11 6L12.2891 6L11 4.71094L11 6ZM4 3L8.28906 3L6.28906 1L1 1L1 12L4 12L4 3ZM13 7L10 7L10 4L5 4L5 15L13 15L13 7Z"/>
          </Button>
        </DockPanel>
        <Panel Margin="36,0,36,36">
          <ScrollViewer HorizontalScrollBarVisibility="Disabled" 
                        VerticalScrollBarVisibility="Auto">
            <ItemsRepeater Items="{Binding Typeface.Glyphs, FallbackValue={x:Null}}">
              <ItemsRepeater.Layout>
                <UniformGridLayout Orientation="Horizontal"
                                   ItemsJustification="Center"
                                   MinColumnSpacing="6"
                                   MinRowSpacing="6"
                                   MinItemWidth="{Binding ItemWidth}"
                                   MinItemHeight="{Binding ItemHeight}"/>
              </ItemsRepeater.Layout>
              <ItemsRepeater.ItemTemplate>
                <DataTemplate DataType="vm:GlyphViewModel">
                  <Button Background="Transparent"
                          BorderBrush="Transparent" 
                          BorderThickness="0"
                          HorizontalContentAlignment="Stretch"
                          VerticalContentAlignment="Stretch"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          Command="{Binding OpenCommand}">
                    <Button.ContextMenu>
                      <ContextMenu>
                        <MenuItem Header="Copy as Xaml (StreamGeometry)" Command="{Binding CopyAsCommand}" CommandParameter="XamlStreamGeometry" />
                        <MenuItem Header="Copy as Xaml (PathIcon)" Command="{Binding CopyAsCommand}" CommandParameter="XamlPathIcon" />
                        <MenuItem Header="Copy as Xaml (Path)" Command="{Binding CopyAsCommand}" CommandParameter="XamlPath" />
                        <MenuItem Header="Copy as Xaml (Canvas)" Command="{Binding CopyAsCommand}" CommandParameter="XamlCanvas" />
                        <MenuItem Header="Copy as Xaml (GeometryDrawing)" Command="{Binding CopyAsCommand}" CommandParameter="XamlGeometryDrawing" />
                        <MenuItem Header="Copy as Xaml (DrawingGroup)" Command="{Binding CopyAsCommand}" CommandParameter="XamlDrawingGroup" />
                        <MenuItem Header="Copy as Xaml (DrawingImage)" Command="{Binding CopyAsCommand}" CommandParameter="XamlDrawingImage" />
                        <MenuItem Header="Copy as Xaml (Image)" Command="{Binding CopyAsCommand}" CommandParameter="XamlImage" />
                        <MenuItem Header="Copy as Svg (Path Data)" Command="{Binding CopyAsCommand}" CommandParameter="SvgPathData" />
                        <MenuItem Header="Copy as Svg (Path)" Command="{Binding CopyAsCommand}" CommandParameter="SvgPath" />
                        <MenuItem Header="Copy as Svg (Svg)" Command="{Binding CopyAsCommand}" CommandParameter="Svg" />
                      </ContextMenu>
                    </Button.ContextMenu>
                    <Border BoxShadow="1 1 1 1 #3F000000"
                            CornerRadius="2">
                      <controls:SKPathControl Path="{Binding Path}"
                                              Paint="{Binding Paint}"
                                              Stretch="None"
                                              StretchDirection="Both"/>
                    </Border>
                  </Button>
                </DataTemplate>
              </ItemsRepeater.ItemTemplate>
            </ItemsRepeater>
          </ScrollViewer>
        </Panel>
      </DockPanel>
      <!-- Glyph View -->
      <Panel PointerPressed="GlyphView_OnPointerPressed"
             PointerReleased="GlyphView_OnPointerReleased"
             PointerMoved="GlyphView_OnPointerMoved"
             Margin="36,36,36,36"
             IsEnabled="{Binding !IsLoading}"
             IsVisible="{Binding SelectedGlyph, Converter={x:Static ObjectConverters.IsNotNull}}">
        <Border Classes="transitionGlyph"
                BoxShadow="4 11 30 1 #3F000000"
                CornerRadius="6"
                Background="White"
                MaxWidth="400"
                MaxHeight="400">
          <DockPanel>
            <DockPanel DockPanel.Dock="Top" DataContext="{Binding SelectedGlyph}">
              <Button Command="{Binding CloseCommand}"
                      Background="Transparent"
                      HorizontalAlignment="Right"
                      HorizontalContentAlignment="Center"
                      Margin="12,12,12,12"
                      DockPanel.Dock="Right">
                <PathIcon Width="15.703125" Height="15.703125" Opacity="0.6" Foreground="#000000" Data="M8.5625 7.85156L15.7031 15L15 15.7031L7.85156 8.5625L0.703125 15.7031L0 15L7.14063 7.85156L0 0.703125L0.703125 0L7.85156 7.14063L15 0L15.7031 0.703125L8.5625 7.85156Z"/>
              </Button>
              <Button Background="Transparent"
                      HorizontalAlignment="Right"
                      HorizontalContentAlignment="Center"
                      Margin="12,12,0,12"
                      DockPanel.Dock="Right">
                <Button.Flyout>
                  <MenuFlyout ShowMode="Standard" Placement="BottomEdgeAlignedLeft">
                    <MenuItem Header="Copy as Xaml (StreamGeometry)" Command="{Binding CopyAsCommand}" CommandParameter="XamlStreamGeometry" />
                    <MenuItem Header="Copy as Xaml (PathIcon)" Command="{Binding CopyAsCommand}" CommandParameter="XamlPathIcon" />
                    <MenuItem Header="Copy as Xaml (Path)" Command="{Binding CopyAsCommand}" CommandParameter="XamlPath" />
                    <MenuItem Header="Copy as Xaml (Canvas)" Command="{Binding CopyAsCommand}" CommandParameter="XamlCanvas" />
                    <MenuItem Header="Copy as Xaml (GeometryDrawing)" Command="{Binding CopyAsCommand}" CommandParameter="XamlGeometryDrawing" />
                    <MenuItem Header="Copy as Xaml (DrawingGroup)" Command="{Binding CopyAsCommand}" CommandParameter="XamlDrawingGroup" />
                    <MenuItem Header="Copy as Xaml (DrawingImage)" Command="{Binding CopyAsCommand}" CommandParameter="XamlDrawingImage" />
                    <MenuItem Header="Copy as Xaml (Image)" Command="{Binding CopyAsCommand}" CommandParameter="XamlImage" />
                    <MenuItem Header="Copy as Svg (Path Data)" Command="{Binding CopyAsCommand}" CommandParameter="SvgPathData" />
                    <MenuItem Header="Copy as Svg (Path)" Command="{Binding CopyAsCommand}" CommandParameter="SvgPath" />
                    <MenuItem Header="Copy as Svg (Svg)" Command="{Binding CopyAsCommand}" CommandParameter="Svg" />
                  </MenuFlyout>
                </Button.Flyout>
                <PathIcon Width="14" Height="16" Opacity="0.6" Foreground="#000000" Data="M14 6.28906L14 16L4 16L4 13L0 13L0 0L6.71094 0L9.71094 3L10.7109 3L14 6.28906ZM11 6L12.2891 6L11 4.71094L11 6ZM4 3L8.28906 3L6.28906 1L1 1L1 12L4 12L4 3ZM13 7L10 7L10 4L5 4L5 15L13 15L13 7Z"/>
              </Button>
            </DockPanel>
            <DockPanel DataContext="{Binding SelectedGlyph}">
              <controls:SKPathControl Path="{Binding Path}"
                                      Paint="{Binding Paint}"
                                      Stretch="Uniform"
                                      StretchDirection="Both"
                                      Margin="36, 12, 36,36"/>
            </DockPanel>
          </DockPanel>
        </Border>
      </Panel>
    </Panel>
  </Panel>
</Window>
